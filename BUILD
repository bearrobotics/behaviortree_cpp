SRCS = [
    "src/action_node.cpp",
    "src/basic_types.cpp",
    "src/behavior_tree.cpp",
    "src/blackboard.cpp",
    "src/bt_factory.cpp",
    "src/decorator_node.cpp",
    "src/condition_node.cpp",
    "src/control_node.cpp",
    "src/shared_library.cpp",
    "src/shared_library_UNIX.cpp",
    "src/tree_node.cpp",
    "src/script_parser.cpp",
    "src/json_export.cpp",
    "src/xml_parsing.cpp",
    "src/actions/test_node.cpp",
    "src/actions/sleep_node.cpp",
    "src/decorators/delay_node.cpp",
    "src/decorators/inverter_node.cpp",
    "src/decorators/repeat_node.cpp",
    "src/decorators/retry_node.cpp",
    "src/decorators/timeout_node.cpp",
    "src/decorators/subtree_node.cpp",
    "src/controls/if_then_else_node.cpp",
    "src/controls/fallback_node.cpp",
    "src/controls/parallel_node.cpp",
    "src/controls/parallel_all_node.cpp",
    "src/controls/reactive_sequence.cpp",
    "src/controls/reactive_fallback.cpp",
    "src/controls/sequence_node.cpp",
    "src/controls/sequence_with_memory_node.cpp",
    "src/controls/switch_node.cpp",
    "src/controls/while_do_else_node.cpp",
    "src/loggers/bt_cout_logger.cpp",
    "src/loggers/bt_file_logger_v2.cpp",
    "src/loggers/bt_minitrace_logger.cpp",
    "src/loggers/bt_observer.cpp",
    "3rdparty/tinyxml2/tinyxml2.cpp",
    "3rdparty/minitrace/minitrace.cpp",
]

cc_library(
    name = "behaviortree_cpp",
    srcs = SRCS,
    hdrs = glob([
        "include/behaviortree_cpp/**",
        "3rdparty/**/*.h",
        "src/private/*.h",
        "3rdparty/**/*.hpp",
    ]),
    copts = [
        "-DBT_BOOST_COROUTINE2",
        "-DZMQ_FOUND",
    ],
    defines = [
        "BTCPP_LIBRARY_VERSION=\\\"4.3.1\\\"",
    ],
    includes = [
        "3rdparty",
        "3rdparty/lexy/include",
        "include",
        "src",
    ],
    linkopts = [
        "-fcoroutines",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
        "@boost//:coroutine2",
        "@cppzmq",
    ],
)
